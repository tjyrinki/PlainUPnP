apply from: "${rootProject.projectDir}/scripts/flavors.gradle"
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'
apply plugin: 'dagger.hilt.android.plugin'

android {
    with flavorConfig

    compileSdkVersion buildConfig.compileSdk
    buildToolsVersion buildConfig.buildTools

    composeOptions {
        kotlinCompilerExtensionVersion(libs.versions.compose.get())
    }

    defaultConfig {
        applicationId "com.m3sv.plainupnp"
        minSdkVersion buildConfig.minSdk
        targetSdkVersion buildConfig.targetSdk

        versionCode buildConfig.version.code
        versionName buildConfig.version.name

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures {
        compose true
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()
        }
    }

    packagingOptions {
        exclude 'META-INF/beans.xml'
    }

    def isDeploy = System.getenv('IS_DEPLOY')

    if (isDeploy)

    buildTypes {
        release {
            minifyEnabled true
            if (isDeploy)
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }
}

dependencies {
    implementation project(':common')
    implementation project(':resources')
    implementation project(':feature:onboarding')
    implementation project(':feature:selectcontentdirectory')
    implementation project(':feature:settings')
    implementation project(':upnp')

    implementation(libs.androidx.core.ktx)
    implementation(libs.androidx.lifecycle.extensions)
    implementation(libs.androidx.lifecycle.ktx.runtime)
    implementation(libs.androidx.lifecycle.ktx.viewmodel)
    implementation(libs.bundles.cling)
    implementation(libs.bundles.compose)
    implementation(libs.bundles.coroutines)
    implementation(libs.bundles.nanohttpd)
    implementation(libs.accompanist.glide)
    implementation(libs.hilt.android.core)
    implementation(libs.sqldelight)
    implementation(libs.timber)
    implementation project(path: ':compose')

    playImplementation platform('com.google.firebase:firebase-bom:28.0.1')
    playImplementation 'com.google.firebase:firebase-analytics-ktx'
    playImplementation 'com.google.firebase:firebase-crashlytics-ktx'
    playImplementation 'com.google.firebase:firebase-analytics-ktx'

    kapt(libs.hilt.compiler)

    testImplementation libs.androidx.core.testing
    testImplementation(libs.test.junit)
    testImplementation(libs.test.mockito.core)
}

if (isPlayStoreBuild) {
    apply plugin: 'com.google.gms.google-services'
    apply plugin: 'com.google.firebase.crashlytics'
}
